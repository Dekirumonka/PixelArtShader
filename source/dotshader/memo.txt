commit log


カメラの正射影に対応した
カメラの nearZ, farZ を設定できるようにした
camera_ortho_height 命令を追加
camera_z_near 命令を追加
camera_z_far 命令を追加



////////////////////////////////////////////////////////////////////////////


カメラの操作方法

	左ドラッグ：注視点の周りを回転
	中ドラッグ（前後）：Z軸に沿って注視点を移動
	右ドラッグ：XY平面に沿って注視点を移動

	※注視点とカメラの距離を変化させたいかも








HPに英語マニュアルへのリンク貼る
TwitterのID（リンク）も貼る


++++++++++++++++++++++++++++++++++++
シェーダー関連
++++++++++++++++++++++++++++++++++++






MakePaletteTex の説明
	Edge 命令など、マテリアルの設定は Col や PerCol よりも後に書く、ということを追記

TexConv の説明

ライトの説明
	アンビエントライトは存在しない（原理的に不要）

設定スクリプトの説明

マテリアルの説明

マニュアル











カスタムプロパティに切り替え


EasyBMP のライセンス確認（BSD二条項？）

ビューアでアンビエントライトを変更できるように

カメラデータが有効な場合でも、アニメーションがオフならカメラを動かせるようにする

リロードボタン

テクスチャの読み込みを D3DXCreateTextureFromFile() で行っているので、ミップマップが生成されている

アンビエントライトの設定をBlenderから引っ張れるようにする

中間色のタイル表示

ブラー






○アンビエントオクルージョンマップの作成
○ライトの出力
	種類
	パラメータ
	アニメーション
○ログをファイルに出す
○Blender 2.62 に変更
○palette.teco に追加命令
	NoEdge	: このマテリアルから指定したマテリアルへのエッジ及びマテリアルエッジを抑制する
○シェーダーでの計算はビュー座標系にすべき（法線など）
	ライトベクトルは事前に変換しておく
○カメラデータの無視フラグをつくる
○アニメの指定フレームだけを表示
○アニメとキャプチャ関係の整理
	キャプチャしない場合はアニメをループさせる
○カメラの修正
	原点付近を中心に回るようにする
○TexConv
	AOマップとライトマップを明確に分ける
	ライトマップでアンビエントライトを表現
		→ディレクショナルライトを全て切っても大丈夫
	AOマップの影響度を調整できるようにする
		0.0 〜 1.0 で調整
		0.0 にすると、全て白になる
		1.0 にすると、入力がそのまま出る
×テクスチャサイズの最大値をAPIで取得する
	→無駄。最大値より小さいサイズでもおかしくなる。










輪郭線、ガター、マテリアルエッジを別の色で表示（赤や青など、デバッグ用）


○エッジ＝トーンを一段落とす なので、AAと共存可能ではないか

明るさが閾値以上なら、エッジをOFFにする？



○マテリアル単位でAAをON/OFFしたい

○マテリアル選択
	面積をみるときに、初期値を-1にする
	現状は背景へのエッジが閾値未満でも選択されてしまう

○	面積は閾値を下回ることはないので、閾値とmaxをとった方がいい




キャプチャした後で終了するかを設定できるように
→コマンドラインかどうか、もしくはオプションでどうか


MakeColorTex
	パレット数の制限をつける
	マテリアルの重複をエラーにする

リロード機能


pastelの目を描く





同じマテリアルで明るさが飛んでいる場所に、フィルターで中間色を置く



アニメーション関係
	・ frame / frameMax (n%) を表示する
	・再生、ポーズ、先頭に戻す の各ボタンと、タイムスライダーの表示


シェーダーexe の引数に設定ファイル名を指定できるようにする
> SkinnedMesh.exe rendering.teco
デフォルトはいままでの config.teco
変更されると、モデル内のファイル名も変更したものが読み込まれる







++++++++++++++++++++++++++++++++++++
その他
++++++++++++++++++++++++++++++++++++

wiki まとめてファイルアップロードするプラグイン探す（できれば公式で）

リポジトリ
gitserver:testing



++++++++++++++++++++++++++++++++++++
iPhone
++++++++++++++++++++++++++++++++++++

C++でベンチマークを作る（ボールが跳ねるようなの）

テクスチャなし版、あり版



++++++++++++++++++++++++++++++++++++
Windowsで使える文字コード
++++++++++++++++++++++++++++++++++++

	.cpp	SJIS, UTF8(BOMあり)
	.fx	SJIS, UTF8(BOMなし)
	.teco	SJIS

上記以外（例えば .cpp の UTF8 BOMなし）は使えない



++++++++++++++++++++++++++++++++++++
HP
++++++++++++++++++++++++++++++++++++

メタタグに入れる
	"pixelart shader"
	"ドット絵シェーダー"



----------------------------------------------------------------------------------------------------------------

Blenderのパラメータ

	Diffuse
		種類		Fresnel に固定
		color		not used
		intensity	not used
		Fresnel		ライトマップOnlyフラグ[0.0-5.0]  0.0以外にするとON
		Factor		not used

	Specular
		種類		Blinn に固定
		color		not used
		hardness	マテリアル番号
		intensity	スペキュラ係数[0.0-1.0]
		IOR		スペキュラ指数[1.0-10.0]  ←値を10倍して出力する




Xファイルのパラメータ

	float4	Diffuse		not used
	float1	Power		マテリアル番号
	float3	Specular	{ スペキュラ係数, スペキュラ指数, ライトマップOnlyフラグ }
	float3	Emissive	not used




テクスチャ

	マテリアルマップ  ライトマップ  の２種

	UVは共有


	マテリアルなし  ライトなし  →テクスチャをバインドしない
	マテリアルあり  ライトなし  →コンバート時に、ライトをオフにしておく
	マテリアルなし  ライトあり  →コンバート時に、マテリアルをオフにしておく ＆ マテリアルのライトマップOnlyフラグをONにする
	マテリアルあり  ライトあり  →コンバートで混ぜる








----------------------------------------------------------------------------------------------------------------


エッジへのアンチエイリアスのかかりかたがあまり綺麗じゃない
↓
直線のエッジにもAAがかかってしまうから？
↓
エッジの曲率を求め、直線にはAAをかけない


----------------------------------------------------------------------------------------------------------------

CPU解析パスでの出力
	平均のZ（対象は候補パレットのみ）	// （対象は候補パレットとそれより手前のピクセル）


解析パスでの出力
	最大のZ差 もしくは、エッジか否か
	平均の明るさ（対象は候補パレットのみ）
	平均法線

	ブロック単位のZ差 もしくは、エッジか否か
	複雑度
	マテリアルエッジ




	☆スペキュラ係数を指定可能にする




	溝やエッジで明るさを落とす
	↓
	溝やエッジでは別パレットを使う



----------------------------------------------------------------------------------------------------------------

輪郭の1ドットだけを暗くするのはおかしい（ただの輪郭抽出になっている）

暗くする場所

	・ポリゴンの輪郭：奥とのz値が離れている
	・マテリアルの輪郭：ポリゴンの輪郭よりも緩い閾値で暗くなる
	・遮蔽：シャドウマップ

暗くなる場所が分かったら、その周りにも暗さが伝播する
	暗さにグラデーションをかける

輪郭は必ず暗くなるわけではない
	光がたくさん当たっている場所では、暗くさせない
	ポリゴンの輪郭でも、マテリアルの輪郭でもそうする


----------------------------------------------------------------------------------------------------------------



	角度差
	Z差
	輪郭表示
		0 なし
		1 赤
		2 色分け




	ライトをディフューズ＋スペキュラに

	ディフューズ項の変更
		現在：
			法線の内積 -1〜0〜+1 → 0〜0〜+1
		変更後：
			法線の内積 -1〜0〜+1 → 0〜+1〜+2

	パレットテクスチャのレンジを 0〜+3 に






		_42	0.20285775	float
		_43	4.3389020	float

		[0]	0.0084524062	float
		[1]	0.58603340	float
		[2]	7.6071658	float




ColorRGBA X.faceColor		= ColorRGBA( (ColorRGB)メタセコ.基本色 * (float)メタセコ.拡散光, (float)メタセコ.不透明度 )

float     X.power		= (float)メタセコ.反射の強さ

ColorRGB  X.specularColor	= ColorRGB( (float)メタセコ.反射光 )

ColorRGB  X.emissiveColor	= (ColorRGB)メタセコ.基本色 * (float)メタセコ.自己照明



D3DCOLORVALUE	D3DMATERIAL9.Diffuse	= X.faceColor
D3DCOLORVALUE	D3DMATERIAL9.Ambient	= D3DCOLORVALUE( 0, 0, 0, 1 )
D3DCOLORVALUE	D3DMATERIAL9.Specular	= D3DCOLORVALUE( X.specularColor, 1 )
D3DCOLORVALUE	D3DMATERIAL9.Emissive	= D3DCOLORVALUE( X.emissiveColor, 1 )
float		D3DMATERIAL9.Power	= X.power



メタセコで自由に使えるパラメータ

	不透明度(0〜1)
	反射の強さ(any)
	反射光(0〜1)

基本色を白に固定すれば自由に使えるパラメータ

	拡散光(0〜1)
	自己照明(0〜1)



